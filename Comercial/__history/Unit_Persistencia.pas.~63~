unit Unit_Persistencia;

interface

uses Unit_DM, Vcl.Dialogs, System.SysUtils, System.Variants;

// Definicoes do Sistema
Function Executa_Conexao:Boolean;
Function Encerra_Conexao:Boolean;

// Definicoes do Cliente
Type
  Dados_Cliente = Record   //struct
                    Cli_Codigo   : Integer;
                    Cli_Nome     : String;
                    Cli_Endereco : String;
                    Cli_CPF      : String;
                    Cli_Telefone : String;
                    Cli_Email    : String;
                    Cli_Sexo     : Integer;
                    Cli_EstadoCivil: Integer;
                    Cli_DataNascimento: String;
                  End;
  Clientes_Cadastrados = Array of Dados_Cliente;
  Procedure Grava_Dados_Cliente(Dados_Form : Dados_Cliente;Alterando:Boolean);
  Procedure Remove_Cliente(Codigo : Integer);
  Function Retorna_Proximo_Codigo:String;
  Function Retorna_Dados_Cliente(Codigo : Integer) : Dados_Cliente;
  Function Retorna_Clientes_Cadastrados(Condicao:String) : Clientes_Cadastrados;

// Definicoes do Supermercado
Type
  Dados_Supermercado = Record
                        Sup_NomeFantasia : String;
                        Sup_RazaoSocial : String;
                        Sup_InscricaoEstadual : String;
                        Sup_CNPJ : String;
                        Sup_Endereco : String;
                        Sup_Lucro : String;
                        Sup_Telefone : String;
                        Sup_Email : String;
                        Sup_NomeResponsavel : String;
                        Sup_TelefoneResponsavel : String;
                      End;

Procedure Grava_Dados_Supermercado(Dados_Form : Dados_Supermercado);
Function Recupera_Dados_Supermercado: Dados_Supermercado;


implementation

// Funcoes do sistema
Function Executa_Conexao:Boolean;
  Begin
    Try
      DM.IBDatabase1.DatabaseName := 'Banco.fdb';
      DM.IBDatabase1.Connected := True;
      DM.IBTransaction1.Active := True;
      Result := True;
    Except
      Result := False;
    End;

  End;

Function Encerra_Conexao:Boolean;
  Begin
    Try
      DM.IBDatabase1.Connected := False;
      DM.IBTransaction1.Active := False;
      Result := True;
    Except
      Result := False;
    End;

  End;

Procedure Commit;
Begin
  With DM.qryCommit Do
     Begin
       Close;
       SQL.Clear;
       SQL.Add('Commit');
       Open;
       Close;
     End;
End;

// Funcoes do Cliente
Function Retorna_Proximo_Codigo:String;
  Begin
    With DM.qryAux Do
      Begin
        SQL.Clear;
        SQL.Add('Select First 1 Cli_Codigo');
        SQL.Add('From Cliente');
        SQL.Add('Order By Cli_Codigo Desc');
        Open;
        FetchAll;
        if ((DM.qryAux.RecordCount > 0) And (DM.qryAux['Cli_Codigo'] <> Null))
          then Begin
                 Result := IntToStr(DM.qryAux['Cli_Codigo'] + 1);
               End
          Else Begin
                 Result := '1';
               End;
      End;
  End;

Function Retorna_Clientes_Cadastrados(Condicao:String) : Clientes_Cadastrados;
Var
  I : Integer;
Begin
  With DM.qryCliente Do
     Begin
       Close;
       SQL.Clear;
       SQL.Add('Select * From Cliente');
       SQL.Add(Condicao);
       Open;
       FetchAll; //garante que todos os resultados vieram pra memória
       First;
       if DM.qryCliente.RecordCount > 0
         then Begin
                for I := 1 to DM.qryCliente.RecordCount Do
                Begin
                  SetLength(Result,Length(Result)+1);
                  if DM.qryCliente['Cli_Codigo'] <> Null
                    then Result[I-1].Cli_Codigo := DM.qryCliente['Cli_Codigo']
                    else Result[I-1].Cli_Codigo := -1;
                  if DM.qryCliente['Cli_Nome'] <> Null
                    then Result[I-1].Cli_Nome := DM.qryCliente['Cli_Nome']
                    else Result[I-1].Cli_Nome := '';
                  if DM.qryCliente['Cli_Endereco'] <> Null
                    then Result[I-1].Cli_Endereco := DM.qryCliente['Cli_Endereco']
                    else Result[I-1].Cli_Endereco := '';
                  if DM.qryCliente['Cli_CPF'] <> Null
                    then Result[I-1].Cli_CPF := DM.qryCliente['Cli_CPF']
                    else Result[I-1].Cli_CPF := '';
                  if DM.qryCliente['Cli_Telefone'] <> Null
                    then Result[I-1].Cli_Telefone := DM.qryCliente['Cli_Telefone']
                    else Result[I-1].Cli_Telefone := '';
                  if DM.qryCliente['Cli_Email'] <> Null
                    then Result[I-1].Cli_Email := DM.qryCliente['Cli_Email']
                    else Result[I-1].Cli_Email := '';
                  if DM.qryCliente['Cli_Sexo'] <> Null
                    then Result[I-1].Cli_Sexo := DM.qryCliente['Cli_Sexo']
                    else Result[I-1].Cli_Sexo := -1;
                  if DM.qryCliente['Cli_EstadoCivil'] <> Null
                    then Result[I-1].Cli_EstadoCivil := DM.qryCliente['Cli_EstadoCivil']
                    else Result[I-1].Cli_EstadoCivil := -1;
                  if DM.qryCliente['Cli_DataNascimento'] <> Null
                    then Result[I-1].Cli_DataNascimento := DM.qryCliente['Cli_DataNascimento']
                    else Result[I-1].Cli_DataNascimento := '';
                  Next;
                End;
              End;
     End;
End;

Procedure Grava_Dados_Cliente(Dados_Form : Dados_Cliente; Alterando:Boolean);
Begin
  if Not(Alterando)
    then Begin
            With DM.qryCliente Do
               Begin
                 Close;
                 SQL.Clear;
                 SQL.Add('Insert Into Cliente Values(');
                 SQL.Add(IntToStr(Dados_Form.Cli_Codigo)+',');
                 SQL.Add(QuotedStr(Dados_Form.Cli_Nome)+',');
                 SQL.Add(QuotedStr(Dados_Form.Cli_Endereco)+',');
                 SQL.Add(QuotedStr(Dados_Form.Cli_CPF)+',');
                 SQL.Add(QuotedStr(Dados_Form.Cli_Telefone)+',');
                 SQL.Add(QuotedStr(Dados_Form.Cli_Email)+',');
                 SQL.Add(IntToStr(Dados_Form.Cli_Sexo)+',');
                 SQL.Add(IntToStr(Dados_Form.Cli_EstadoCivil)+',');
                 SQL.Add(QuotedStr(Dados_Form.Cli_DataNascimento)+')');

                 //ShowMessage(SQL.Text);
                 ExecSQL;
                 Commit;
               End;
         End
    Else Begin
            With DM.qryCliente Do
               Begin
                 Close;
                 SQL.Clear;
                 SQL.Add('Update Cliente Set');
                 SQL.Add('Cli_Nome = '+QuotedStr(Dados_Form.Cli_Nome)+',');
                 SQL.Add('Cli_Endereco = '+QuotedStr(Dados_Form.Cli_Endereco)+',');
                 SQL.Add('Cli_CPF = '+QuotedStr(Dados_Form.Cli_CPF)+',');
                 SQL.Add('Cli_Telefone = '+QuotedStr(Dados_Form.Cli_Telefone)+',');
                 SQL.Add('Cli_Email = '+QuotedStr(Dados_Form.Cli_Email)+',');
                 SQL.Add('Cli_Sexo = '+IntToStr(Dados_Form.Cli_Sexo)+',');
                 SQL.Add('Cli_EstadoCivil = '+IntToStr(Dados_Form.Cli_EstadoCivil)+',');
                 SQL.Add('Cli_DataNascimento = '+QuotedStr(Dados_Form.Cli_DataNascimento));
                 SQL.Add('Where Cli_Codigo = '+IntToStr(Dados_Form.Cli_Codigo));
                 ExecSQL;
                 Commit;
               End;
         End;
End;

Procedure Remove_Cliente(Codigo : Integer);
Begin
   With DM.qryCliente Do
    Begin
      Close;
      SQL.Clear;
      SQL.Add('Delete From Cliente ');
      SQL.Add('Where Cli_Codigo = '+IntToStr(Codigo));
      ExecSQL;
      Commit;
    End;
End;

Function Retorna_Dados_Cliente(Codigo : Integer) : Dados_Cliente;
Var
  I : Integer;
Begin
  With DM.qryCliente Do
     Begin
       Close;
       SQL.Clear;
       SQL.Add('Select * From Cliente');
       SQL.Add('Where Cli_Codigo = '+IntToStr(Codigo));
//       ExecSQL;
       Open;
       FetchAll; //garante que todos os resultados vieram pra memória
       First;
       if DM.qryCliente.RecordCount > 0
         then Begin
                for I := 1 to DM.qryCliente.RecordCount Do
                Begin
                  if DM.qryCliente['Cli_Codigo'] <> Null
                    then Result.Cli_Codigo := DM.qryCliente['Cli_Codigo']
                    else Result.Cli_Codigo := -1;
                  if DM.qryCliente['Cli_Nome'] <> Null
                    then Result.Cli_Nome := DM.qryCliente['Cli_Nome']
                    else Result.Cli_Nome := '';
                  if DM.qryCliente['Cli_Endereco'] <> Null
                    then Result.Cli_Endereco := DM.qryCliente['Cli_Endereco']
                    else Result.Cli_Endereco := '';
                  if DM.qryCliente['Cli_CPF'] <> Null
                    then Result.Cli_CPF := DM.qryCliente['Cli_CPF']
                    else Result.Cli_CPF := '';
                  if DM.qryCliente['Cli_Telefone'] <> Null
                    then Result.Cli_Telefone := DM.qryCliente['Cli_Telefone']
                    else Result.Cli_Telefone := '';
                  if DM.qryCliente['Cli_Email'] <> Null
                    then Result.Cli_Telefone := DM.qryCliente['Cli_Email']
                    else Result.Cli_Telefone := '';
                  if DM.qryCliente['Cli_Sexo'] <> Null
                    then Result.Cli_Sexo := DM.qryCliente['Cli_Sexo']
                    else Result.Cli_Sexo := -1;
                  if DM.qryCliente['Cli_EstadoCivil'] <> Null
                    then Result.Cli_Sexo := DM.qryCliente['Cli_EstadoCivil']
                    else Result.Cli_Sexo := -1;
                  if DM.qryCliente['Cli_DataNascimento'] <> Null
                    then Result.Cli_Telefone := DM.qryCliente['Cli_DataNascimento']
                    else Result.Cli_Telefone := '';
                  Next;
                End;
              End;
     End;
End;

// Funcoes do Supermercado
Procedure Grava_Dados_Supermercado(Dados_Form : Dados_Supermercado);
begin
  With DM.qrySupermercado Do
    Begin
      Close;
      SQL.Clear;

      SQL.Add('Update Supermercado Set');
      SQL.Add('Sup_NomeFantasia = '+QuotedStr(Dados_Form.Sup_NomeFantasia)+',');
      SQL.Add('Sup_RazaoSocial = '+QuotedStr(Dados_Form.Sup_RazaoSocial)+',');
      SQL.Add('Sup_InscricaoEstadual = '+QuotedStr(Dados_Form.Sup_InscricaoEstadual)+',');
      SQL.Add('Sup_CNPJ = '+QuotedStr(Dados_Form.Sup_CNPJ)+',');
      SQL.Add('Sup_Endereco = '+QuotedStr(Dados_Form.Sup_Endereco)+',');
      SQL.Add('Sup_Lucro = '+QuotedStr(Dados_Form.Sup_Lucro)+',');
      SQL.Add('Sup_Telefone = '+QuotedStr(Dados_Form.Sup_Telefone)+',');
      SQL.Add('Sup_Email = '+QuotedStr(Dados_Form.Sup_Email)+',');
      SQL.Add('Sup_NomeResponsavel = '+QuotedStr(Dados_Form.Sup_NomeResponsavel)+',');
      SQL.Add('Sup_TelefoneResponsavel = '+QuotedStr(Dados_Form.Sup_TelefoneResponsavel));
      SQL.Add('where Sup_CNPJ = '+QuotedStr(Dados_Form.Sup_CNPJ));

//      ShowMessage(SQL.Text);
      ExecSQL;
      Commit;
    End;
end;

Function Recupera_Dados_Supermercado;
begin
  With DM.qrySupermercado Do
     Begin
       Close;
       SQL.Clear;
       SQL.Add('Select * From Supermercado');
//       ShowMessage(SQL.Text);
       //ExecSQL;
       Open;
       FetchAll; //garante que todos os resultados vieram pra memória

        if DM.qrySupermercado['Sup_NomeFantasia'] <> Null
          then Result.Sup_NomeFantasia := DM.qrySupermercado['Sup_NomeFantasia']
          else Result.Sup_NomeFantasia := '';
        if DM.qrySupermercado['Sup_RazaoSocial'] <> Null
          then Result.Sup_RazaoSocial := DM.qrySupermercado['Sup_RazaoSocial']
          else Result.Sup_RazaoSocial := '';
        if DM.qrySupermercado['Sup_InscricaoEstadual'] <> Null
          then Result.Sup_InscricaoEstadual := DM.qrySupermercado['Sup_InscricaoEstadual']
          else Result.Sup_InscricaoEstadual := '';
        if DM.qrySupermercado['Sup_CNPJ'] <> Null
          then Result.Sup_CNPJ := DM.qrySupermercado['Sup_CNPJ']
          else Result.Sup_CNPJ := '';
        if DM.qrySupermercado['Sup_Endereco'] <> Null
          then Result.Sup_Endereco := DM.qrySupermercado['Sup_Endereco']
          else Result.Sup_Endereco := '';
        if DM.qrySupermercado['Sup_Lucro'] <> Null
          then Result.Sup_Lucro := DM.qrySupermercado['Sup_Lucro']
          else Result.Sup_Lucro := '';
        if DM.qrySupermercado['Sup_Telefone'] <> Null
          then Result.Sup_Telefone := DM.qrySupermercado['Sup_Telefone']
          else Result.Sup_Telefone := '';
        if DM.qrySupermercado['Sup_Email'] <> Null
          then Result.Sup_Email := DM.qrySupermercado['Sup_Email']
          else Result.Sup_Email := '';
        if DM.qrySupermercado['Sup_NomeResponsavel'] <> Null
          then Result.Sup_NomeResponsavel := DM.qrySupermercado['Sup_NomeResponsavel']
          else Result.Sup_NomeResponsavel := '';
        if DM.qrySupermercado['Sup_TelefoneResponsavel'] <> Null
          then Result.Sup_TelefoneResponsavel := DM.qrySupermercado['Sup_TelefoneResponsavel']
          else Result.Sup_TelefoneResponsavel := '';

     End;

end;

end.
